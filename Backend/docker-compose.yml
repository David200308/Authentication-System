version: "3.8"

services:
  backend:
    image: ghcr.io/david200308/authentication-system/backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS_FILE=/run/secrets/mysql_root_password
      - DB_NAME=AUTHDB
      - JWT_PRIVATE_KEY_FILE=/run/secrets/jwt_private_key
      - JWT_PUBLIC_KEY_FILE=/run/secrets/jwt_public_key
      - DOCS_USER_FILE=/run/secrets/docs_user
      - DOCS_PASSWORD_FILE=/run/secrets/docs_password
      - PASSKEY_RPNAME_FILE=/run/secrets/passkey_rpname
      - PASSKEY_RPID_FILE=/run/secrets/passkey_rpid
      - PASSKEY_ORIGIN_FILE=/run/secrets/passkey_origin
      - AES_KEY_FILE=/run/secrets/aes_key
      - MAILGUN_API_KEY_FILE=/run/secrets/mailgun_api_key
      - MAILGUN_FROM_DOMAIN_FILE=/run/secrets/mailgun_from_domain
      - SENTRY_DSN_FILE=/run/secrets/sentry_dsn
      - REDIS_URL=redis://redis:6379
    secrets:
      - mysql_root_password
      - jwt_private_key
      - jwt_public_key
      - docs_user
      - docs_password
      - passkey_rpname
      - passkey_rpid
      - passkey_origin
      - aes_key
      - mailgun_api_key
      - mailgun_from_domain
      - sentry_dsn
    depends_on:
      - mysql
      - redis
    networks:
      - internal
      - external
    entrypoint: >
      sh -c "
      until mysqladmin ping -h mysql --silent && redis-cli -h redis ping | grep -q PONG; do
        echo 'Waiting for database and redis...';
        sleep 5;
      done;
      echo 'Starting backend...';
      exec npm start;
      "

  mysql:
    image: "mysql:latest"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: AUTHDB
    secrets:
      - mysql_root_password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -uroot -p`cat /run/secrets/mysql_root_password`"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal

  redis:
    image: "redis:latest"
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal

volumes:
  mysql_data:
    driver: local
  redis:
    driver: local

networks:
  internal:
    driver: overlay
  external:
    driver: bridge

secrets:
  mysql_root_password:
    external: true
  jwt_private_key:
    external: true
  jwt_public_key:
    external: true
  docs_user:
    external: true
  docs_password:
    external: true
  passkey_rpname:
    external: true
  passkey_rpid:
    external: true
  passkey_origin:
    external: true
  aes_key:
    external: true
  mailgun_api_key:
    external: true
  mailgun_from_domain:
    external: true
  sentry_dsn:
    external: true
