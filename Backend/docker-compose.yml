version: "3"
services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=admin@skyproton.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock"

  backend:
    build: .
    # image: backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(\"auth.api.skyproton.com\")"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
    # ports:
    #   - "3001:3001"
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS_FILE=/run/secrets/mysql_root_password
      - DB_NAME=AUTHDB
      - JWT_PRIVATE_KEY_FILE=/run/secrets/jwt_private_key
      - JWT_PUBLIC_KEY_FILE=/run/secrets/jwt_public_key
      - DOCS_USER_FILE=/run/secrets/docs_user
      - DOCS_PASSWORD_FILE=/run/secrets/docs_password
      - PASSKEY_RPNAME_FILE=/run/secrets/passkey_rpname
      - PASSKEY_RPID_FILE=/run/secrets/passkey_rpid
      - PASSKEY_ORIGIN_FILE=/run/secrets/passkey_origin
      - AES_KEY_FILE=/run/secrets/aes_key
      - MAILGUN_API_KEY_FILE=/run/secrets/mailgun_api_key
      - MAILGUN_FROM_DOMAIN_FILE=/run/secrets/mailgun_from_domain
      - SENTRY_DSN_FILE=/run/secrets/sentry_dsn
      - REDIS_URL=redis://redis:6379
    secrets:
      - mysql_root_password
      - jwt_private_key
      - jwt_public_key
      - docs_user
      - docs_password
      - passkey_rpname
      - passkey_rpid
      - passkey_origin
      - aes_key
      - mailgun_api_key
      - mailgun_from_domain
      - sentry_dsn
    deploy:
      update_config:
        order: start-first
    depends_on:
      - mysql
      - redis

  mysql:
    image: "mysql:latest"
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: AUTHDB
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    secrets:
      - mysql_root_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: "redis:latest"
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data

volumes: 
  letsencrypt:
    driver: local
  mysql_data:
    driver: local
  redis:
    driver: local

secrets:
  mysql_root_password:
    external: true
  jwt_private_key:
    external: true
  jwt_public_key:
    external: true
  docs_user:
    external: true
  docs_password:
    external: true
  passkey_rpname:
    external: true
  passkey_rpid:
    external: true
  passkey_origin:
    external: true
  aes_key:
    external: true
  mailgun_api_key:
    external: true
  mailgun_from_domain:
    external: true
  sentry_dsn:
    external: true
