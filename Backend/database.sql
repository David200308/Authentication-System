-- CREATE DATABASE AUTHDB;
USE AUTHDB;

CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255),
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    loginDeviceCount INTEGER NOT NULL DEFAULT 0,
    latestLoginAt TIMESTAMP,
    mfaEnabled BOOLEAN DEFAULT FALSE,
    passkeyEnabled BOOLEAN DEFAULT FALSE,
    isVerify BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS mfa (
    mfa_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER NOT NULL,
    mfa_key VARCHAR(255) NOT NULL,
    enableAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    initialSetup BOOLEAN NOT NULL DEFAULT FALSE
);

-- loginMethod: general, qr, notification, passkey
CREATE TABLE IF NOT EXISTS auth (
    auth_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    auth_uuid VARCHAR(255) NOT NULL,
    user_id INTEGER NOT NULL,
    loginAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ipAddress VARCHAR(255) NOT NULL,
    loginMethod VARCHAR(255) NOT NULL,
    loginDeviceName VARCHAR(255) NOT NULL,
    loginLocation VARCHAR(255) NOT NULL,
    notificationId INTEGER,
    qrId INTEGER
);

-- receiverAction: approved, rejected, pending
CREATE TABLE IF NOT EXISTS notifications (
    notification_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER NOT NULL,
    notification_uuid VARCHAR(255) NOT NULL,
    sentNotificationDeviceName VARCHAR(255) NOT NULL,
    sentNotificationLocation VARCHAR(255) NOT NULL,
    sentNotificationAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    sentNotificationIp VARCHAR(255) NOT NULL,
    receiverAction VARCHAR(255) NOT NULL,
    receiverActionAt TIMESTAMP,
    authCode VARCHAR(255) NOT NULL,
    alreadyUsed BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS passkey (
    passkey_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER NOT NULL,
    passkey_uid VARCHAR(255) NOT NULL,
    public_key VARCHAR(255) NOT NULL,
    counter INT NOT NULL,
    transports VARCHAR(255),
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- scannerAction: approved, rejected, pending
CREATE TABLE IF NOT EXISTS qr (
    qr_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER DEFAULT NULL,
    qr_uuid VARCHAR(255) NOT NULL,
    qrDeviceName VARCHAR(255) NOT NULL,
    qrLocation VARCHAR(255) NOT NULL,
    qrAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    qrIp VARCHAR(255) NOT NULL,
    scannerAction VARCHAR(255) NOT NULL,
    scannerActionAt TIMESTAMP,
    authCode VARCHAR(255) NOT NULL,
    alreadyUsed BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS logs (
    log_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER NOT NULL,
    log_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    content VARCHAR(255) NOT NULL
);
